# -*- coding: utf-8 -*-
"""HousePricePrediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hgQ3a71KvsTnwOVK7ao7fJGiJR8ySn7L
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

# %matplotlib inline

HouseDF = pd.read_csv('/content/Housing.csv')

HouseDF.head()

HouseDF.info()

HouseDF.columns

sns.pairplot(HouseDF)

sns.heatmap(HouseDF.corr(), annot=True)

X = HouseDF[['price', 'area', 'bedrooms',
               'stories', 'parking']]

y = HouseDF['price']

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=100)

from sklearn.linear_model import LinearRegression
lm = LinearRegression()
lm.fit(X_train,y_train)

print(lm.intercept_)

coeff_df = pd.DataFrame(lm.coef_,X.columns,columns=['Coefficient'])
coeff_df

predictions = lm.predict(X_test)

plt.scatter(y_test,predictions)

sns.displot((y_test-predictions),bins=50);

from sklearn import metrics

print('MAE:', metrics.mean_absolute_error(y_test, predictions))
print('MSE:', metrics.mean_squared_error(y_test, predictions))
print('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, predictions)))

#THANK YOU#

